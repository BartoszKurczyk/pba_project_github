/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.25).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Error;
import io.swagger.model.MakeOrderRequest;
import io.swagger.model.OrderResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2022-01-12T11:30:38.794Z")

@Validated
@Api(value = "order", description = "the order API")
@RequestMapping(value = "/api")
public interface OrderApi {

    @ApiOperation(value = "Make order", nickname = "makeOrder", notes = "Make order", response = OrderResponse.class, authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "order", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Order made successfully", response = OrderResponse.class),
        @ApiResponse(code = 400, message = "Bad request", response = Error.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Error.class),
        @ApiResponse(code = 422, message = "Unprocessable entity. Codes: USER_ALREADY_EXISTS", response = Error.class) })
    @RequestMapping(value = "/order",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<OrderResponse> makeOrder(@ApiParam(value = "Order object that has to be made" ,required=true )  @Valid @RequestBody String body, @RequestHeader("Authorization") String token, @RequestHeader("X-HMAC-SIGNATURE") String hmacSignature) throws Exception;

}
